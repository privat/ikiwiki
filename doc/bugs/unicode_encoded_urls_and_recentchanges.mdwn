it appears that unicode characters in the title that are unicode letters are spared the __ filename encoding but instead saved in their utf8 encoding. (correct me if i'm wrong; didn't find the code that does this.) -- see below for examples.

> Filenames can have any alphanumerics in them without the __ escaping.
> Your locale determines whether various unicode characters are considered
> alphanumeric. In other words, it just looks at the \[[:alpha:]] character
> class, whatever your locale defines it to be. --[[Joey]]

this is not a problem per se, but (at least with git backend) the recent changes missinterpret the file name character set (it seems to read the filenames as latin1) and both display wrong titles and create broken links.

the problem can be shown with an auto-setup'd ikiwiki without cgi when manually creating utf8 encoded filenames and running ikiwiki with LANG=en_GB.UTF-8 .

> Encoding issue, I figured out a fix. [[done]] --[[Joey]]

>> the link text works now, but the link goes to
>> `ikiwiki.cgi?page=uml%C3%A4ute&do=recentchanges_link`, which fails with
>> "missing page". it seems that bestlink can't handle utf8 encoded texts. (the
>> same happens, by the way, when using meta-redir to a page with high bytes in
>> the name.)
>>
>>> The problem is that all cgi inputs have to be explicitly decoded to
>>> utf-8, which I've now done for `recentchange_link`.
>>>> thanks a lot, i think that closed the bug.
>>> 
>>> I cannot, however, reproduce a problem with meta redir. Here it
>>> generated the following html, which redirected the browser ok:
>>>	<meta http-equiv="refresh" content="0; URL=./../Ã¢/" />
>>>> sorry, my fault -- it was the blank which needed to be replaced by an
>>>> underscore, not the high byte character
>>
>> update: i've had a look at the git options; you could run git with '-z' (NUL
>> termination) in the `git_commit_info` function; this would require some
>> changes in `parse_diff_tree`, but otherwise completely eliminate the
>> problems with git escaping.
>> 
>>> If you would like to develop a patch to that effect, I'd be glad to
>>> drop the current nasty code.
>>>> i'll have a look, but i'm afraid that's above my current perl skills.
>>>> --[[chrysn]]
